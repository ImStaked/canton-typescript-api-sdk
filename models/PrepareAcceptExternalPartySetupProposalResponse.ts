/**
 * Validator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class PrepareAcceptExternalPartySetupProposalResponse {
    /**
    * base64-encoded transaction. The transaction corresponds to the protobuf definition of a `PreparedTransaction` https://github.com/digital-asset/canton/blob/main/community/ledger-api/src/main/protobuf/com/daml/ledger/api/v2/interactive_submission_data.proto#L18 and can be decoded using standard protobuf libraries. 
    */
    'transaction': string;
    /**
    * Hex-encoded hash of the transaction
    */
    'txHash': string;
    /**
    * Optional additional details on how the transaction was encoded and hashed. Only set if verbose_hashing=true in the request. Note that there are no guarantees on the stability of the format or content of this field. Its content should NOT be parsed and should only be used for troubleshooting purposes. 
    */
    'hashingDetails'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "transaction",
            "baseName": "transaction",
            "type": "string",
            "format": ""
        },
        {
            "name": "txHash",
            "baseName": "tx_hash",
            "type": "string",
            "format": ""
        },
        {
            "name": "hashingDetails",
            "baseName": "hashing_details",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PrepareAcceptExternalPartySetupProposalResponse.attributeTypeMap;
    }

    public constructor() {
    }
}
