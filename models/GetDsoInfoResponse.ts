/**
 * Common schemas for Splice API definitions
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ContractWithState } from '../models/ContractWithState';
import { HttpFile } from '../http/http';

export class GetDsoInfoResponse {
    /**
    * User ID representing the SV
    */
    'svUser': string;
    /**
    * Party representing the SV
    */
    'svPartyId': string;
    /**
    * Party representing the whole DSO; for Scan only, also returned by `/v0/dso-party-id` 
    */
    'dsoPartyId': string;
    /**
    * Threshold required to pass vote requests; also known as the \"governance threshold\", it is always derived from the number of `svs` in `dso_rules` 
    */
    'votingThreshold': number;
    'latestMiningRound': ContractWithState;
    'amuletRules': ContractWithState;
    'dsoRules': ContractWithState;
    /**
    * For every one of `svs` listed in `dso_rules`, a contract of the Daml template `Splice.DSO.SvState.SvNodeState`. This does not include states for offboarded SVs, though they may still have an on-ledger state contract 
    */
    'svNodeStates': Array<ContractWithState>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "svUser",
            "baseName": "sv_user",
            "type": "string",
            "format": ""
        },
        {
            "name": "svPartyId",
            "baseName": "sv_party_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "dsoPartyId",
            "baseName": "dso_party_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "votingThreshold",
            "baseName": "voting_threshold",
            "type": "number",
            "format": ""
        },
        {
            "name": "latestMiningRound",
            "baseName": "latest_mining_round",
            "type": "ContractWithState",
            "format": ""
        },
        {
            "name": "amuletRules",
            "baseName": "amulet_rules",
            "type": "ContractWithState",
            "format": ""
        },
        {
            "name": "dsoRules",
            "baseName": "dso_rules",
            "type": "ContractWithState",
            "format": ""
        },
        {
            "name": "svNodeStates",
            "baseName": "sv_node_states",
            "type": "Array<ContractWithState>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GetDsoInfoResponse.attributeTypeMap;
    }

    public constructor() {
    }
}
