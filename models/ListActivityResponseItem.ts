/**
 * Scan API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AbortTransferInstruction } from '../models/AbortTransferInstruction';
import { AmuletAmount } from '../models/AmuletAmount';
import { Transfer } from '../models/Transfer';
import { HttpFile } from '../http/http';

export class ListActivityResponseItem {
    /**
    * Describes the type of activity that occurred. Determines if the data for the activity should be read from the `transfer`, `mint`, or `tap` property. 
    */
    'activityType': ListActivityResponseItemActivityTypeEnum;
    /**
    * The event id. 
    */
    'eventId': string;
    /**
    * The ledger offset of the event. Note that this field may not be the same across nodes, and therefore should not be compared between SVs. 
    */
    'offset'?: string;
    /**
    * The effective date of the event. 
    */
    'date': Date;
    /**
    * The id of the domain through which this transaction was sequenced. 
    */
    'domainId': string;
    /**
    * The round for which this transaction was registered. 
    */
    'round'?: number;
    /**
    * The amulet price for the round at which this transfer was executed. 
    */
    'amuletPrice'?: string;
    'transfer'?: Transfer;
    'mint'?: AmuletAmount;
    'tap'?: AmuletAmount;
    'abortTransferInstruction'?: AbortTransferInstruction;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "activityType",
            "baseName": "activity_type",
            "type": "ListActivityResponseItemActivityTypeEnum",
            "format": ""
        },
        {
            "name": "eventId",
            "baseName": "event_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "offset",
            "baseName": "offset",
            "type": "string",
            "format": ""
        },
        {
            "name": "date",
            "baseName": "date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "domainId",
            "baseName": "domain_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "round",
            "baseName": "round",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "amuletPrice",
            "baseName": "amulet_price",
            "type": "string",
            "format": ""
        },
        {
            "name": "transfer",
            "baseName": "transfer",
            "type": "Transfer",
            "format": ""
        },
        {
            "name": "mint",
            "baseName": "mint",
            "type": "AmuletAmount",
            "format": ""
        },
        {
            "name": "tap",
            "baseName": "tap",
            "type": "AmuletAmount",
            "format": ""
        },
        {
            "name": "abortTransferInstruction",
            "baseName": "abort_transfer_instruction",
            "type": "AbortTransferInstruction",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ListActivityResponseItem.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ListActivityResponseItemActivityTypeEnum {
    Transfer = 'transfer',
    Mint = 'mint',
    DevnetTap = 'devnet_tap',
    AbortTransferInstruction = 'abort_transfer_instruction'
}

