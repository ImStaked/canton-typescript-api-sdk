/**
 * Validator API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class PrepareTransferPreapprovalSendRequest {
    'senderPartyId': string;
    'receiverPartyId': string;
    'amount': number;
    'expiresAt': Date;
    /**
    * The expected value of the counter that is used to order and deduplicate TransferCommands. Starts at 0 and  increases by 1 for each executed TransferCommand (independent of whether is succeeded or not). The most recent value can be read from scan through /v0/transfer-command-counter/{party} 
    */
    'nonce': number;
    /**
    * When true, the response will contain additional details on how the transaction was encoded and hashed. This can be useful for troubleshooting of hash mismatches. Should only be used for debugging. 
    */
    'verboseHashing'?: boolean;
    'description'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "senderPartyId",
            "baseName": "sender_party_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "receiverPartyId",
            "baseName": "receiver_party_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "expiresAt",
            "baseName": "expires_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "nonce",
            "baseName": "nonce",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "verboseHashing",
            "baseName": "verbose_hashing",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PrepareTransferPreapprovalSendRequest.attributeTypeMap;
    }

    public constructor() {
    }
}
